---
import '../global.css'
import '../styles/typography.scss';
import ThemeToggle from '@components/ThemeToggle.astro';
import HomeIcon from '@components/icons/HomeIcon.astro';
import PostsIcon from '@components/icons/PostsIcon.astro';
import NotesIcon from '@components/icons/NotesIcon.astro';
import TodayILearnedIcon from '@components/icons/TodayILearnedIcon.astro';
import WorksIcon from '@components/icons/WorksIcon.astro';
export interface Props {
  title: string;
}

const { title } = Astro.props as Props;
const navButton = [
  [HomeIcon, 'Home', '/'],
  [PostsIcon, 'Blog', '/blog'],
  [NotesIcon, 'Notes', '/notes'],
  [TodayILearnedIcon, 'Til', '/til'],
  [WorksIcon, 'Works', '/works'],
];

const { pathname } = Astro.url
const isActive = (href: string) => href !== '/' && pathname.startsWith(href)

---

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/x-icon" href="/favicon.ico" />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
  <script is:inline>
    if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.setAttribute('color-mode', 'dark');
      document.documentElement.classList.add('dark')
    } else {
      document.documentElement.removeAttribute('color-mode');
      document.documentElement.classList.remove('dark')
    }
  </script>
</head>

<body>
  <div class="m-auto p-6 max-w-3xl lg:max-w-4xl">
    <header class=" flex w-full justify-between items-center">
      <a href="#skip" class="sr-only focus:not-sr-only">
        Skip to content
      </a>
      <nav>
        <ul class="flex items-stretch justify-between gap-4">
          {navButton.map(([Icon, text, href]) => (
          <li class="p-1 group">
            <a class="flex gap-4 items-center" href={href}>
              <span>{text}</span>
              <Icon />
            </a>
          </li>
          ))}
        </ul>
      </nav>
      <div class='theme-toggle-wrapper '>
        <ThemeToggle id='theme-toggle' />
      </div>
    </header>
    <pre>{JSON.stringify({pathname, isActive})}</pre>
    <main id="skip" class="flex flex-col flex-grow py-12">
      <slot />
    </main>
  </div>
</body>

</html>
<style>
  :global(body) {
    padding: var(--size-fluid-2);
  }
</style>